apiVersion: v1
kind: Namespace
metadata:
  name: globo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: database-config
  namespace: globo
data:
  DATABASE_URL: svc-postgres.database.cluster.local
  DATABASE_USER: usr_costmate
  DATABASE_PASSWORD: xadkncbirheywv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: globo-deployment
  namespace: globo
  labels:
    app: globo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: globo
  template:
    metadata:
      labels:
        app: globo
    spec:
      containers:
      - name: globo-container
        image: ramonglobo/app-globo:latest
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: database-config
        resources:
          limits:
            cpu: 1.0
            memory: 2000Mi
          requests:
            cpu: 0.5
            memory: 1000Mi
        livenessProbe:
          httpGet:
            path: /costmate/actuator
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /costmate/actuator
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: globo-service
  namespace: globo
spec:
  selector:
    app: globo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: globo-ingress
  namespace: globo
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: globo-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: globo-service
            port:
              number: 80
